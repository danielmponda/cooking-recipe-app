{"version":3,"sources":["serviceWorker.js","component/Header.js","component/Search.js","component/Recipe.js","component/RelatedRecipes.js","component/Recipes.js","component/Pagination.js","component/HomePage.js","component/RecipeViewPage.js","component/scroll.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","Search","search","setSearch","useState","quary","setQuary","className","onSubmit","e","preventDefault","console","log","type","placeholder","value","onChange","target","Recipe","props","recipe","label","calories","toFixed","healthLabels","join","image","alt","src","Related","Recipes","reciper","view","related","filter","reps","index","id","map","key","to","Pagination","recipesPerPage","totalRecipes","paginate","pageNumers","currentPage","i","Math","ceil","push","number","onClick","Home","recipes","setCurrentPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipe","slice","length","pageNumber","RecipeView","useEffect","todosArray","todosArrayFilter","element","ingredientLines","ScrollToTop","prevProps","this","scrollTo","Fragment","Component","withRouter","App","setRecipes","getRecipes","a","fetch","response","json","data","hits","exact","path","component","render","params","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac053c6a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div>Home</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport * as Icons from 'react-icons/fa'\r\nimport '../App.css'\r\n\r\nfunction Search({ search, setSearch }) {\r\n  const [quary, setQuary] = useState('')\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault()\r\n    if (!quary) {\r\n      console.log('no value')\r\n    } else {\r\n      setSearch(quary)\r\n      setQuary('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchbar-compenent\">\r\n      <div className=\"search-wrapper\">\r\n        <div className=\"searchbar-wrapper\">\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-form textInput\"\r\n                placeholder=\"search for recipe ...\"\r\n                value={quary}\r\n                onChange={(e) => setQuary(e.target.value)}\r\n              />\r\n              <button type=\"submit\" className=\"input-searchbar submit\">\r\n                {' '}\r\n                <Icons.FaSearch />{' '}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nfunction Recipe({ props }) {\r\n  // console.log(props.recipe)\r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe-info\">\r\n        <p className=\"lable\">{props.recipe.label}</p>\r\n        <p className=\"calories\">\r\n          Calories : {props.recipe.calories.toFixed(2)}\r\n        </p>\r\n        <p className=\"deit\"> {props.recipe.healthLabels.join(' | ')}</p>\r\n\r\n        {/* {props.recipe.dietLabels\r\n          ? `<p className=\"deit\"> Deit : ${props.recipe.dietLabels}</p>`\r\n          : null} */}\r\n      </div>\r\n      <div className=\"img-label\">\r\n        {props.recipe.image ? (\r\n          <img className=\"recipe-img\" alt=\"pic\" src={props.recipe.image} />\r\n        ) : (\r\n          <h1>Loading</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\n\r\nfunction Related({ props }) {\r\n  // console.log(props.recipe)\r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe-info\">\r\n        <p className=\"lable\">{props.recipe.label}</p>\r\n        <p className=\"calories\">\r\n          Calories : {props.recipe.calories.toFixed(2)}\r\n        </p>\r\n        <p className=\"deit\"> {props.recipe.healthLabels.join(' | ')}</p>\r\n\r\n        {/* {props.recipe.dietLabels\r\n          ? `<p className=\"deit\"> Deit : ${props.recipe.dietLabels}</p>`\r\n          : null} */}\r\n      </div>\r\n      <div className=\"img-label\">\r\n        {props.recipe.image ? (\r\n          <img className=\"recipe-img\" alt=\"pic\" src={props.recipe.image} />\r\n        ) : (\r\n          <h1>Loading</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Related\r\n","import React from 'react'\r\nimport Recipe from './Recipe'\r\nimport Related from './RelatedRecipes'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Recipes({ reciper, view }) {\r\n  console.log(view)\r\n\r\n  const related = reciper.filter((reps, index) => {\r\n    if (index < 4) {\r\n      return true\r\n    }\r\n  })\r\n\r\n  console.log(related)\r\n\r\n  if (view === 'search') {\r\n    return (\r\n      <div className=\"recipe-wrapper\" id=\"recipe-wrapper\">\r\n        {reciper.map((recipe, index) => (\r\n          <Link key={index} to={`/recipeview/${recipe.recipe.label}`}>\r\n            <Recipe key={index} props={recipe} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"recipe-wrapper\" id=\"recipe-wrapper\">\r\n        {related.map((recipe, index) => (\r\n          <Link key={index} to={`/recipeview/${recipe.recipe.label}`}>\r\n            <Related key={index} props={recipe} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Recipes\r\n","import React from 'react'\r\n\r\nfunction Pagination({ recipesPerPage, totalRecipes, paginate, currentPage }) {\r\n  const pageNumers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalRecipes / recipesPerPage); i++) {\r\n    pageNumers.push(i)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"pagination\">\r\n        {pageNumers.map((number) => (\r\n          <li key={number}>\r\n            <a\r\n              onClick={() => {\r\n                paginate(number)\r\n              }}\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport Search from './Search'\r\nimport Recipes from './Recipes'\r\nimport Pagination from './Pagination'\r\n\r\nfunction Home({\r\n  currentPage,\r\n  recipesPerPage,\r\n  search,\r\n  setSearch,\r\n  recipes,\r\n  setCurrentPage,\r\n}) {\r\n  const indexOfLastRecipe = currentPage * recipesPerPage\r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage\r\n  const currentRecipe = recipes.slice(indexOfFirstRecipe, indexOfLastRecipe)\r\n\r\n  // Change Page\r\n  function paginate(pageNumber) {\r\n    setCurrentPage(pageNumber)\r\n  }\r\n  const view = 'search'\r\n  return (\r\n    <div className=\"home-page\">\r\n      <Search search={search} setSearch={setSearch} />\r\n      <Recipes reciper={currentRecipe} view={view} />\r\n      <Pagination\r\n        recipesPerPage={recipesPerPage}\r\n        totalRecipes={recipes.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect } from 'react'\r\nimport Recipes from './Recipes'\r\n\r\nfunction RecipeView({ id, recipes }) {\r\n  useEffect(() => {\r\n    // console.log(id)\r\n    // console.log(recipes)\r\n  })\r\n\r\n  let todosArray = []\r\n\r\n  todosArray = recipes.filter((e) => e.recipe.label === id)\r\n\r\n  const related = recipes.filter((e) => e.recipe.label !== id)\r\n\r\n  console.log(todosArray)\r\n\r\n  const todosArrayFilter = todosArray.filter((reps, index) => {\r\n    console.log(index)\r\n    if (index == 0) {\r\n      return true\r\n    }\r\n  })\r\n  console.log(todosArrayFilter)\r\n  const view = 'ralated'\r\n  return (\r\n    <div className=\"recipeview-page\">\r\n      <div className=\"recipeview-compenent\"></div>\r\n\r\n      {todosArrayFilter.map((element, index) => (\r\n        <div key={index} className=\"item-wrapper\">\r\n          <div className=\"item-sec-a\">\r\n            <div className=\"view-img\">\r\n              <img\r\n                className=\"img-label-view\"\r\n                alt=\"pic\"\r\n                src={element.recipe.image}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"recipe-view\">\r\n              <div className=\"recipe-info\">\r\n                <h4>{element.recipe.label}</h4>\r\n                <p className=\"calories\">\r\n                  Calories : {element.recipe.calories.toFixed(2)}\r\n                </p>\r\n                <p className=\"deit\">\r\n                  {' '}\r\n                  {element.recipe.healthLabels.join(' | ')}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"item-sec-b\">\r\n            <span className=\"ingredient-title\">\r\n              {element.recipe.ingredientLines.length} Ingredient\r\n            </span>\r\n            <div className=\"recipe-view-ingr\">\r\n              <ul>\r\n                {element.recipe.ingredientLines.map((element, index) => (\r\n                  <li key={index}>{element}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {related ? <div className=\"relatedtitle\"> also try </div> : null}\r\n\r\n      <Recipes reciper={related} view={view} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecipeView\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment />\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from './component/Header'\r\nimport Home from './component/HomePage'\r\n\r\nimport RecipeView from './component/RecipeViewPage'\r\nimport ScrollToTop from './component/scroll'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const APP_ID = 'dffecd49'\r\n  const APP_KEY = '06bd1a0e0b7da0e3bb098a6f14a3f394'\r\n\r\n  const [recipes, setRecipes] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [recipesPerPage] = useState(10)\r\n\r\n  const [search, setSearch] = useState('chicken')\r\n\r\n  useEffect(() => {\r\n    getRecipes()\r\n  }, [search])\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(\r\n      `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=24`\r\n    )\r\n    const data = await response.json()\r\n    setRecipes(data.hits)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <ScrollToTop />\r\n\r\n        {/* <Header /> */}\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={() => (\r\n              <Home\r\n                recipes={recipes}\r\n                search={search}\r\n                setSearch={setSearch}\r\n                recipesPerPage={recipesPerPage}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path=\"/recipeview\" component={RecipeView} />\r\n          <Route\r\n            exact\r\n            path=\"/recipeview/:id\"\r\n            render={({ match }) => (\r\n              <RecipeView id={match.params.id} recipes={recipes} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n\nserviceWorker.unregister();"],"sourceRoot":""}